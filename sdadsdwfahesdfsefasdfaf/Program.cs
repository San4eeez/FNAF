using System;
using System.Media;
using System.Threading;
using System.Timers;
using FNAF.Properties;

namespace FNAF
{

    class Program
    {


        static SoundPlayer scream = new SoundPlayer(Resources.screamer);


        static int[] rooms = { 0, 0, 0, 0, 0 }; // комнаты
        static int currentPosition = 0; // позиция аниматроника
        static bool isDoorOpen = true; // Состояние двери
        static bool playerSurvived = false; // жив?
        static bool timerExpired = false; // для таймера
        static int batteryCharge = 1000; // Заряд 

        static void Main(string[] args)
        {
            Console.WriteLine("Игра началась!");//не забыть добавить обучалку
            Console.WriteLine("Алло, алло? Э-э, я хотел записать сообщение для тебя, чтобы помочь \r\nтебе обосноваться в твою первую ночь. Эм, я работал в этом офисе до \r\nтебя. Я заканчиваю свою неделю сейчас, собственно говоря. Так что я \r\nзнаю, что это может быть немного ошеломительным, но я здесь, чтобы \r\nсказать тебе: здесь нечего беспокоиться. Э-э, ты будешь в порядке. Так \r\nчто давай просто сосредоточимся на твоей первой неделе. Ладно? В начале ты находишься в самой дальней от аниматроника комнате. Для того чтобы посмотреть где сейчас аниматроник, достаточно посмотреть в твой планшет, просто нажми “j”, учти, что использование планшета ест твой заряд аккумулятора, не доводи его до нуля, иначе будет неприятно…Неприятно будет кстати если он зайдёт к тебе в комнату, следи за ним, если он рядом, то закрой дверь “c”, как только он отойдёт, то открой дверь “o” Кстати ты давно проверял его местоположение?. Собственно, продержись до утра и всё…\r\n");
            
            // отдельный поток для взаимодействия с дверью
            Thread doorThread = new Thread(() =>
            {
                while (true)
                {
                    // Взаимодействие с дверью

                    
                    ConsoleKeyInfo keyInfo = Console.ReadKey(true);//крутой рид лайн, чтоб не стопалось

                    if (keyInfo.KeyChar == 'c' || keyInfo.KeyChar == 'C')
                    {
                        Console.Clear();
                        isDoorOpen = false;
                        Console.WriteLine("Дверь закрыта.");
                    }
                    else if (keyInfo.KeyChar == 'o' || keyInfo.KeyChar == 'O')
                    {
                        Console.Clear();
                        isDoorOpen = true;
                        Console.WriteLine("Дверь открыта.");
                    }

                    // Вывод местоположения "j"
                    if (keyInfo.KeyChar == 'j' || keyInfo.KeyChar == 'J')
                    {
                        Console.Clear();
                        Console.WriteLine("Текущее состояние комнат:");
                        PrintRooms();
                        Console.WriteLine();
                    }
                }
            });

            // штука взаимодействия с дверью
            doorThread.Start();

            // запускаем таймер 
            System.Timers.Timer timer = new System.Timers.Timer(30000);
            timer.Elapsed += TimerElapsed;
            timer.AutoReset = false;
            timer.Start();
            bool played = false;

            // Перемещение аниматроника
            while (true)
            {
                // случайное число: 0 остаться на месте, 1 переместиться в предыдущую, 2 переместиться в следующую
                int move = new Random().Next(3);

                // Проверка состояния двери
                if (isDoorOpen || (currentPosition != rooms.Length - 2))
                {
                    // Если дверь открыта или аниматроник не находится в предпоследней комнате, он может двигаться в следующую комнату
                    currentPosition = MoveToNextRoom(move);
                }
                else
                {
                    // Если дверь закрыта и аниматроник находится в предпоследней комнате, он остается на месте или перемещается в предыдущую комнату
                    if (move == 0 || (move == 1 && currentPosition > 0))
                    {
                        currentPosition = MoveToNextRoom(move);
                    }
                }

                // Уменьшаем заряд батарейки в зависимости от состояния двери
                if (isDoorOpen)
                {
                    batteryCharge -= 10;
                }
                else
                {
                    batteryCharge -= 50;
                }


                // Если игрок нажал на "j", отнимаем 5 единиц заряда
                if (Console.KeyAvailable)
                {
                    ConsoleKeyInfo keyInfo = Console.ReadKey(true);
                    if (keyInfo.KeyChar == 'j' || keyInfo.KeyChar == 'J')
                    {
                        batteryCharge -= 5;
                    }
                }
                // Проверка, истекло ли время
                if (timerExpired)
                {
                    playerSurvived = true;
                    Console.WriteLine("*Звон будильника*");
                    string pobeda = @"
                  ____         ___  ___  ___
                 / ___|       / _ \ |  \/  |
                / /___       / /_\ \| .  . |
                | ___ \      |  _  || |\/| |
                | \_/ |      | | | || |  | |
                \_____/      \_| |_/\_|  |_/

                ";
                    Console.WriteLine(pobeda);
                    Thread.Sleep(1000);
                    Console.Clear();
                    continue;

                }
                // Проверка, достиг ли аниматроник последней комнаты или кончился заряд
                if (currentPosition == rooms.Length - 1 || batteryCharge < 1)
                {
                    string scr1 = @"
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@SS#@######S#@#####SSSSSSSSSSS#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#S######S?S#####SSSSSSSSS%%%S###@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####@@######@@@##SSSSSS%%%%SSS##@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####@@@@@@@@#SSSSSSSSSSS##@@@@######@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#####@@##@@###SSSSSS#SSSSS##@##########@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####%+;;;+%##SSSSSS#@@@@@@#########@@@##@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########S;.+S*,.:#####SS#@@#@@@@#@#######@@##@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########SS+;+:,,:S###S*+;*#@@#@##@###########@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@########S##S%%S#@@@@#?%%:.;@@####@@####S#S#@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@######SSSSSSS#@@@@@@@@@%:,?@@###@@@@@@#@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####SSS%%%%%S#@@@#@@@@#S@#S###@@@@@@@@@@@@@@@@@@@@@@@@@
    ##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####SSS%%%%%%%%S#######SSS####@@@@@@@@@@@@@@@@@@@@@@@@@
    SS######@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###SSSSS%%%%%S%%%%%SSSSSS###@@@@@@@@@@@@@@@@@@@@@@@@@
    SSS#########@@#######SSS#@@@@@@@@@@@@@@@####SSSSSSSSS%S%%%%SSSS##@@@@@@@@@@@@@@@@@@@@@@@@@
    SSSSSSS#####@@#SSSSSSSSSS##@@@@@@@@@@@@@@@@@#######SSSSSSSSSSS###########@@@@@@@@@@@@@@@@@
    SSSSSSSSSS##S##S%%%%SSSSSS#@@@@@@@##@@@@@@@@@@@@@@###############SSSSSSSSSSS###@@@@@@@@@@@
    S###SSS######@#SSSSSSSSSS#@@@@@@@@@######@@@@@@@@@@@@@@@@@@@#####SSSSS%%S%SSSSSS@@@@@@@@@@
    ###########@@@######SSS##@@@@@@@@@@@@###SSSS##@@@@@@@@@@@@@@##S#####SSSSSSSSSSSS@@@@@@####
    ####@@@@@@@@@@@@########@@@@@@@@@@@@@@@@########SSS#######@@###@@#######SSSSSSSS#@@@@#####
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#############@@@@@@@@@@@############@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@##@@@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    ";
                    string scr2 = @"
    @@@@@@@@@@@%*+***+++#%##@@@@%###################*##########%@%#%%##*###%@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@#++++++*+*%##%%%########*#############%%###%#####%@@%#####%@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@#******++*##%%%%%%#################%@%##%%%%#%%####%@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@#***+*++*##%%%%%%%%%@@@@%###########################%@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@%%#*****#%@%%%%%@@%%%%%%%##%#########%%@@@@%%%%######%@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@%%%%###%@%%%%@@%%##%%%%%%%%%#####%@@@@%%#%@@@@%####%#@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@%%%%%%%%%@@@@@@@@@@#####@@%*+===--#@@@%#####@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@%%%%%#%%@@%*++*@@@@%####%@*=+**===:#@@%######@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@%%#%#%@%*+***+*@@@@@@@@@@@%*#%#**=*@@%##%####@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@%%%%#%@@*+#%@+*@@@@@@@@%##*****++++++*#######%@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@%%%#%@@#+*#***++***###**++++*****+++**#%###%%@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@%%%#%%****++********##*++******+***#*+#%###%%@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@%%%##*******++******##***####*+++****++#%%%%%@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@%%%#**********+++++**#%#####*****+***++#%%%%%@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@%@@%%#***####****++++*+%%%#*#****+*******#%%%%@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@##*#*#####******#*##%*+***#******###%%@%@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@%%#########****##**%###**#####++*=*#+*@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%##########++*#%@@@#==--@@%##**#%=-*%@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%#+*%%==-=#@@@@@@%@@%%@@@@@@*=-*#%%%@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%#%@@#%@*@#%@@*%+=*+*%@#*=-:=*%##%%@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@%%@@@@@@@@@%#@*##*#*++---=+@%+-=+##%###%%%@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*#+**++@@*+=:=@@@@@*===+%############%%@%#######@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@%%@@@@%%#*==#@*+++*%%###%%%#%%%%%%########%@@@#######@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@%%%%%%%%%%%%%#%%#%%%%%%%%##########*##%@@@######@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@%@%%%%%%%%%%%%%%%%%#%%%%%%#################%@%#####@@@@@@@@@@@

    ";
                    string scr3 = @"
    @@@@%%%###%%%%%%@@@@@@@%######################%%%%%#%%####%#####%%%#****+++*%##%@@@@@@@@@@
    @%###********#%%%%%@%%%#######%%%############%%%#%%%%%%%%%#%%####%%%%#########%@@@%@%%%%@@
    ###*+++******++*%#%%%%%%%%@@%%%%#################%%%%%%%%#%%%%%%###@@%%%%%%%@@@@@@%@%%%%@@
    ###+*******+++*#%%%%@@@%%%%%%%%%%%%%%%#%%%%%%@@@@@@@@@@@@@@%%###%%##@@@@@@@@@@@@@@@@@@@@@@
    ##%#*****+++*#@@%%%%%%%##%%@@@@@@@@%@@@@@@@@%####*********##%@%####%%@@@@@@@@@@@@@@@@@@@@@
    @%%%%####**#%@@%%%%%%##%@@@@%%###########%#**+++++*************##%###%@@@@@@@@@@@@@@@@@@@@
    @@@@%%%%%%#%@@@%%%#%##%@##***+*************#****####**+++***##*+*%%####@@@@@@@@@@@@@@@@%@@
    @@@@@@@@@@@@@@%%%%%%###*******************####*#*##******++****++*%####%@@@@@@@@@@@@@@@@@%
    @@@@@@@@@@@@@@@@%%%%#*****####*****+++++++*####********+++***+*+++#%%##%%%@@@@@@@@@@@@@%%@
    @@@@@@@@@@@@@@@@@%%%#******###****+++++***+%#%#++++****++**+*******#%%%%%%%@@@@@@@@@@@%@%@
    @@@@@@@@@@@@@@@@@@%%############***+++**#*+###*******#***#**#####**#%%%%%%%@@@@@@@@@@@@%%%
    @@@@@@@@@@@@@@@@%%%%%%########**#*****+*****%%%#*===--*##*=-=+****#%%%%%%%#%@@@@@@@@@@@@@#
    @@@@@@@@@@@@@@%%@@@@@@@%##########*+=-::+###%%@@%*****#@@@%%#+=-=*++#@%%%%%@@@@@@@@@@@@@@%
    @@@@@@@@@@@@@@%%@@@@@%@@@%%%*+==*@%*****#%%%@@@@@@@%%%@@@@@@@%%#*%%%%@%#**@@@@@@@@@@%%%@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@%%%##%%@@@@@@%%%%@@@@@@@@@@@@%@@@@@@@@@@@@@@@%%#%@@@@@@@@@@%%%@@@
    @@@@@@@@@@@@@@@@@@@@@@%%@%#**%@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#%@@@@@@@@@@@@@+=%@%@@*@@@@@@@%%%%@@@@@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*+=-  *@@%#%@@@@@@@@@@%*+*%@@@@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*-....:+@@@@@@@@@@@@@@@@*==##%@@@@@@@@@@@@@@%
    @@@@@@@@@@@@@@@@@@@@@@@@@@@@%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*=-+##%%@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@#+=%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@@@@@@%*++##%%%@@@@@@%%%%%@#
    @@@@@@@@@@@@@%%%%%%##%%*++#%@@@@@@@@@@*@@@@@@@@@@@@@@@@@@%+@@@@@@@@#=--####%%%@@#######%#+
    @@@@@@@@@@###########%%%+--*%@@@@@@@@@+@@@@@@@@@@@@@@@#%%==%@@@@@@#+==#%##%%%%@@@##%#####+
    @@@@@@@@@@%%%%%%%%%%%%%%%***++%@@@@@@@#*+@%*%@*#@@#=%%==**#%@@@@@*=--#%%%###%%%%@@%######*
    @@@@@@@@@@@@@%%%%%%@@%%%%%%#---#%@@@@@@%%%%##@#*##*+**#%@@@@@@%+=--=%%%%#%%%%##%%%%#######

    ";
                    
                    Console.Clear();
                    playerSurvived = false;
                    Console.WriteLine("Тебя сожрали");
                    if (!played)
                    {
                        scream.Play();
                        played = true;
                    }
                    
                    for (int i = 0; i < 5; i++)
                    {
                        for (int j = 0; j < 3; j++)
                        {
                            Console.WriteLine(scr1);
                            Thread.Sleep(200);
                            Console.SetCursorPosition(0, 0);
                            Console.WriteLine(scr2);
                            Thread.Sleep(200);
                            Console.SetCursorPosition(0, 0);
                            Console.WriteLine(scr3);
                            Thread.Sleep(200);
                            Console.SetCursorPosition(0, 0);

                        }
                    }
                    continue;
                }

                // Вывод текущего состояния комнат только при нажатии на клавишу "j"
                if (Console.KeyAvailable)
                {
                    ConsoleKeyInfo keyInfo = Console.ReadKey(true);
                    if (keyInfo.KeyChar == 'j' || keyInfo.KeyChar == 'J')
                    {
                        Console.WriteLine("Текущее состояние комнат:");
                        PrintRooms();
                        Console.WriteLine();
                    }
                }



                // Проверка, закончился ли заряд батарейки
                if (batteryCharge <= 0)
                {
                    Console.WriteLine("Заряд батарейки закончился. Вы проиграли!");
                    break;
                }

                // Задержка перед следующим перемещением
                Thread.Sleep(1000);
            }

            // Закрытие потока взаимодействия с дверью
            doorThread.Join();

            Console.ReadLine();
        }

        static void TimerElapsed(object sender, ElapsedEventArgs e)
        {
            timerExpired = true;
        }

        static int MoveToNextRoom(int move)
        {
            if (move == 0)
            {
                // Оставаться на месте
                return currentPosition;
            }
            else if (move == 1 && currentPosition > 0)
            {
                // Переместиться в предыдущую комнату
                return currentPosition - 1;
            }
            else if (move == 2 && currentPosition < rooms.Length - 1)
            {
                // Переместиться в следующую комнату
                return currentPosition + 1;
            }

            // Если не удалось переместиться в предыдущую или следующую комнату, оставаться на месте
            return currentPosition;
        }

        static void PrintRooms()
        {
            for (int i = 0; i < rooms.Length; i++)
            {
                if (i == currentPosition)
                {
                    Console.Write(" X ");
                }
                else
                {
                    Console.Write($" {rooms[i]} ");
                }
            }

            Console.Write(" - ");

            if (isDoorOpen)
            {
                Console.WriteLine("Дверь открыта");
            }
            else
            {
                Console.WriteLine("Дверь закрыта");
            }

            Console.WriteLine($"Заряд батарейки: {batteryCharge}");
        }
    }
}
